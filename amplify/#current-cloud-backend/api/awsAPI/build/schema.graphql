
type Pic @aws_api_key @aws_cognito_user_pools {
  id: ID!
  name: String!
  description: String!
  filePath: String!
  like: Int!
  owner: String!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelPicConnection @aws_api_key @aws_cognito_user_pools {
  items: [Pic]!
  nextToken: String
}

input ModelPicFilterInput {
  id: ModelIDInput
  name: ModelStringInput
  description: ModelStringInput
  filePath: ModelStringInput
  like: ModelIntInput
  owner: ModelStringInput
  and: [ModelPicFilterInput]
  or: [ModelPicFilterInput]
  not: ModelPicFilterInput
}

type Query {
  getPic(id: ID!): Pic @aws_api_key @aws_cognito_user_pools
  listPics(filter: ModelPicFilterInput, limit: Int, nextToken: String): ModelPicConnection @aws_api_key @aws_cognito_user_pools
}

input ModelPicConditionInput {
  name: ModelStringInput
  description: ModelStringInput
  filePath: ModelStringInput
  like: ModelIntInput
  owner: ModelStringInput
  and: [ModelPicConditionInput]
  or: [ModelPicConditionInput]
  not: ModelPicConditionInput
}

input CreatePicInput {
  id: ID
  name: String!
  description: String!
  filePath: String!
  like: Int!
  owner: String!
}

input UpdatePicInput {
  id: ID!
  name: String
  description: String
  filePath: String
  like: Int
  owner: String
}

input DeletePicInput {
  id: ID!
}

type Mutation {
  createPic(input: CreatePicInput!, condition: ModelPicConditionInput): Pic @aws_api_key @aws_cognito_user_pools
  updatePic(input: UpdatePicInput!, condition: ModelPicConditionInput): Pic @aws_api_key @aws_cognito_user_pools
  deletePic(input: DeletePicInput!, condition: ModelPicConditionInput): Pic @aws_api_key @aws_cognito_user_pools
}

type Subscription {
  onCreatePic(owner: String): Pic @aws_subscribe(mutations: ["createPic"]) @aws_api_key @aws_cognito_user_pools
  onUpdatePic(owner: String): Pic @aws_subscribe(mutations: ["updatePic"]) @aws_api_key @aws_cognito_user_pools
  onDeletePic(owner: String): Pic @aws_subscribe(mutations: ["deletePic"]) @aws_api_key @aws_cognito_user_pools
}

